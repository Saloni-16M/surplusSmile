openapi: 3.0.0
info:
  title: SurplusSmile API
  version: 1.0.0
  description: Swagger documentation for Admin, NGO, Resort, and Pickup routes
servers:
  - url: http://localhost:5000/api

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginInput:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

paths:
  /admin/login:
    post:
      summary: Admin login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        200:
          description: Successful login
        401:
          description: Invalid credentials

  /admin/ngos:
    get:
      summary: Get all NGOs
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of all NGOs

  /admin/resorts:
    get:
      summary: Get all resorts
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of all resorts

  /admin/ngos/{ngoId}/approve:
    put:
      summary: Approve an NGO
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: ngoId
          required: true
          schema:
            type: string
      responses:
        200:
          description: NGO approved

  /admin/resorts/{resortId}/approve:
    put:
      summary: Approve a resort
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: resortId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Resort approved

  /ngo/register:
    post:
      summary: Register an NGO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        201:
          description: NGO registered

  /ngo/login:
    post:
      summary: NGO login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        200:
          description: NGO logged in

  /resort/register:
    post:
      summary: Register a resort
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        201:
          description: Resort registered

  /resort/login:
    post:
      summary: Resort login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        200:
          description: Resort logged in

  /pickup/confirm-by-ngo/{donationId}:
    put:
      summary: Confirm pickup by NGO
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: donationId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Pickup confirmed by NGO

  /pickup/confirm-by-resort/{donationId}:
    put:
      summary: Confirm pickup by Resort
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: donationId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Pickup confirmed by Resort

  /pickup/mark-picked/{donationId}:
    put:
      summary: Mark donation as picked
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: donationId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Donation marked as picked
